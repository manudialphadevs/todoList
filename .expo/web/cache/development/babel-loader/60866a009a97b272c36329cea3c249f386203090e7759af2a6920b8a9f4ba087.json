{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pending from \"./Pending\";\nimport Completed from \"./Completed\";\nimport Overdue from \"./Overdue\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nfunction TabNavigator(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {}, [navigation]);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Pending\",\n        component: Pending\n      }), _jsx(Tab.Screen, {\n        name: \"Completed\",\n        component: Completed\n      }), _jsx(Tab.Screen, {\n        name: \"Overdue\",\n        component: Overdue\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('newTask');\n      },\n      children: _jsx(Text, {\n        style: styles.btnTextStyle,\n        children: \"Add\"\n      })\n    })]\n  });\n}\nexport default TabNavigator;\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#8f22cb',\n    marginTop: 40,\n    paddingVertical: 8\n  },\n  btnTextStyle: {\n    color: '#ffffff',\n    fontSize: 12,\n    textTransform: 'uppercase',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","TouchableOpacity","Text","Pending","Completed","Overdue","createMaterialTopTabNavigator","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","TabNavigator","_ref","navigation","useEffect","children","Navigator","Screen","name","component","style","styles","button","onPress","navigate","btnTextStyle","create","alignItems","backgroundColor","marginTop","paddingVertical","color","fontSize","textTransform","textAlign"],"sources":["/Users/manudi/todo/todoList/Components/Navigator.js"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, TouchableOpacity, Text } from 'react-native';\nimport Pending from './Pending';\nimport Completed from './Completed';\nimport Overdue from './Overdue';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nconst Tab = createMaterialTopTabNavigator();\n\nfunction TabNavigator({ navigation }) {\n  useEffect(() => {\n    // do something\n }, [navigation]);\n  return (\n    <>\n      <Tab.Navigator>\n        <Tab.Screen name=\"Pending\" component={Pending} />\n        <Tab.Screen name=\"Completed\" component={Completed} />\n        <Tab.Screen name=\"Overdue\" component={Overdue} />\n      </Tab.Navigator>\n      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('newTask')}>\n        <Text style={styles.btnTextStyle}>Add</Text>\n      </TouchableOpacity>\n    </>\n  );\n}\nexport default TabNavigator;\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#8f22cb',\n    marginTop: 40,\n    paddingVertical: 8,\n  },\n  btnTextStyle: {\n    color: '#ffffff',\n    fontSize: 12,\n    textTransform: 'uppercase',\n    textAlign: 'center',\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE/B,OAAOC,OAAO;AACd,OAAOC,SAAS;AAChB,OAAOC,OAAO;AACd,SAASC,6BAA6B,QAAQ,qCAAqC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpF,IAAMC,GAAG,GAAGP,6BAA6B,CAAC,CAAC;AAE3C,SAASQ,YAAYA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChCC,SAAS,CAAC,YAAM,CAEjB,CAAC,EAAE,CAACD,UAAU,CAAC,CAAC;EACf,OACEN,KAAA,CAAAE,SAAA;IAAAM,QAAA,GACER,KAAA,CAACG,GAAG,CAACM,SAAS;MAAAD,QAAA,GACZV,IAAA,CAACK,GAAG,CAACO,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEnB;MAAQ,CAAE,CAAC,EACjDK,IAAA,CAACK,GAAG,CAACO,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAElB;MAAU,CAAE,CAAC,EACrDI,IAAA,CAACK,GAAG,CAACO,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEjB;MAAQ,CAAE,CAAC;IAAA,CACpC,CAAC,EAChBG,IAAA,CAACP,gBAAgB;MAACsB,KAAK,EAAEC,MAAM,CAACC,MAAO;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMV,UAAU,CAACW,QAAQ,CAAC,SAAS,CAAC;MAAA,CAAC;MAAAT,QAAA,EACpFV,IAAA,CAACN,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACI,YAAa;QAAAV,QAAA,EAAC;MAAG,CAAM;IAAC,CAC5B,CAAC;EAAA,CACnB,CAAC;AAEP;AACA,eAAeJ,YAAY;AAC3B,IAAMU,MAAM,GAAGxB,UAAU,CAAC6B,MAAM,CAAC;EAC/BJ,MAAM,EAAE;IACNK,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,EAAE;IACbC,eAAe,EAAE;EACnB,CAAC;EACDL,YAAY,EAAE;IACZM,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,WAAW;IAC1BC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}