{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AddTaskScreen = function AddTaskScreen(_ref) {\n  var onAddTask = _ref.onAddTask;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var addTask = function addTask(task) {\n    if (task == null) return;\n    setTasks([].concat(_toConsumableArray(tasks), [task]));\n    Keyboard.dismiss();\n  };\n  var _deleteTask = function deleteTask(deleteIndex) {\n    setTasks(tasks.filter(function (value, index) {\n      return index != deleteIndex;\n    }));\n  };\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"TODO LIST\"\n      }), _jsx(ScrollView, {\n        style: styles.scrollView,\n        children: tasks.map(function (task, index) {\n          return _jsx(View, {\n            style: styles.taskContainer,\n            children: _jsx(TaskItem, {\n              index: index + 1,\n              task: task,\n              deleteTask: function deleteTask() {\n                return _deleteTask(index);\n              }\n            })\n          }, index);\n        })\n      }), _jsx(TaskInputField, {\n        addTask: addTask\n      })]\n    })\n  });\n};\nexport default AddTaskScreen;\nvar styles = StyleSheet.create({\n  TodoContainer: {\n    flex: 1,\n    backgroundColor: '#F37325'\n  },\n  heading: {\n    color: '#fff',\n    fontSize: 30,\n    fontWeight: '600',\n    marginTop: 30,\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  scrollView: {\n    marginBottom: 10\n  },\n  taskContainer: {\n    marginTop: 20\n  },\n  MainContainer: {\n    flexDirection: 'row',\n    marginHorizontal: 20\n  },\n  indexContainer: {\n    backgroundColor: '#B02C05',\n    borderRadius: 12,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 50,\n    height: 60\n  },\n  index: {\n    color: '#fff',\n    fontSize: 20\n  },\n  taskContainer: {\n    backgroundColor: '#B02C05',\n    borderRadius: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    minHeight: 50\n  },\n  task: {\n    color: '#fff',\n    height: '90%',\n    width: '90%',\n    fontSize: 16\n  },\n  delete: {\n    marginRight: 10,\n    alignContent: 'stretch'\n  },\n  KeyboardAVContainer: {\n    borderColor: '#fff',\n    backgroundColor: '#FFFFF',\n    borderWidth: 1,\n    marginHorizontal: 20,\n    borderRadius: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    position: 'relative',\n    bottom: 20\n  },\n  inputField: {\n    color: '#fff',\n    height: 50,\n    flex: 2\n  },\n  button: {\n    height: 30,\n    width: 30,\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","Keyboard","KeyboardAvoidingView","ScrollView","StyleSheet","View","TextInput","Text","TouchableOpacity","MaterialIcons","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AddTaskScreen","_ref","onAddTask","_useState","_useState2","_slicedToArray","tasks","setTasks","addTask","task","concat","_toConsumableArray","dismiss","deleteTask","deleteIndex","filter","value","index","children","style","styles","container","heading","scrollView","map","taskContainer","TaskItem","TaskInputField","create","TodoContainer","flex","backgroundColor","color","fontSize","fontWeight","marginTop","marginBottom","textAlign","MainContainer","flexDirection","marginHorizontal","indexContainer","borderRadius","marginRight","alignItems","justifyContent","width","height","paddingHorizontal","paddingVertical","minHeight","delete","alignContent","KeyboardAVContainer","borderColor","borderWidth","position","bottom","inputField","button"],"sources":["/Users/manudi/todo/todoList/Components/AddTaskScreen copy.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Keyboard, KeyboardAvoidingView, ScrollView, StyleSheet, View, TextInput, Text, TouchableOpacity } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nconst AddTaskScreen = ({ onAddTask }) => {\n  // const [taskData, setTaskData] = useState({ title: '', description: '', deadline: '' });\n  // const [title, setTitle] = useState();\n  // const [description, setDescription] = useState();\n\n  // const handleSubmit = () => {\n  //   setTitle(title);\n  //   setDescription(description);\n  //   setTaskData(title, description);\n  //   console.log(taskData);\n  // };\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = (task) => {\n    if (task == null) return;\n    setTasks([...tasks, task]);\n    Keyboard.dismiss();\n  }\n\n  const deleteTask = (deleteIndex) => {\n    setTasks(tasks.filter((value, index) => index != deleteIndex));\n  }\n  return (\n    <>\n      <View style={styles.container}>\n        <Text style={styles.heading}>TODO LIST</Text>\n      <ScrollView style={styles.scrollView}>\n        {\n        tasks.map((task, index) => {\n          return (\n            <View key={index} style={styles.taskContainer}>\n              <TaskItem index={index + 1} task={task} deleteTask={() => deleteTask(index)}/>\n            </View>\n          );\n        })\n      }\n      </ScrollView>\n      <TaskInputField addTask={addTask}/>\n    </View>\n    </>\n  );\n};\n\nexport default AddTaskScreen;\n\nconst styles = StyleSheet.create({\n  TodoContainer: {\n    flex: 1,\n    backgroundColor: '#F37325',\n  },\n  heading: {\n    color: '#fff',\n    fontSize: 30,\n    fontWeight: '600',\n    marginTop: 30,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  scrollView: {\n    marginBottom: 10,\n  },\n  taskContainer: {\n    marginTop: 20,\n  },\n\n  MainContainer: {\n    flexDirection: 'row',\n    marginHorizontal: 20,\n  },\n  indexContainer: {\n    backgroundColor: '#B02C05',\n    borderRadius: 12,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 50,\n    height: 60,\n  },\n  index: {\n    color: '#fff',\n    fontSize: 20,\n  },\n  taskContainer: {\n    backgroundColor: '#B02C05',\n    borderRadius: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    minHeight: 50,\n  },\n  task: {\n    color: '#fff',\n    height: '90%',\n    width: '90%',\n    fontSize: 16,\n  },\n  delete: {\n    marginRight: 10,\n    alignContent: 'stretch',\n  },\n\n  KeyboardAVContainer: {\n    borderColor: '#fff',\n    backgroundColor: '#FFFFF',\n    borderWidth: 1,\n    marginHorizontal: 20,\n    borderRadius: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    position: 'relative',\n    bottom: 20,\n  },\n  inputField: {\n    color: '#fff',\n    height: 50,\n    flex: 2,\n  },\n  button: {\n    height: 30,\n    width: 30,\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n// import React, { useState } from 'react';\n// import { Keyboard, KeyboardAvoidingView, ScrollView, StyleSheet, View, TextInput, Text, TouchableOpacity } from 'react-native';\n// import { MaterialIcons } from '@expo/vector-icons';\n// import TaskItem from './TaskItem'; // Import the new TaskItem component\n\n// const TaskScreen = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [task, setTask] = useState();\n\n//   const addTask = newTask => {\n//     if (newTask == null) return;\n//     setTasks([...tasks, newTask]);\n//     Keyboard.dismiss();\n//   };\n\n//   const deleteTask = deleteIndex => {\n//     setTasks(tasks.filter((value, index) => index !== deleteIndex));\n//   };\n\n//   const handleAddTask = () => {\n//     addTask(task);\n//     setTask(null);\n//   };\n\n//   return (\n//     <View style={styles.TodoContainer}>\n//       <Text style={styles.heading}>TODO LIST</Text>\n//       <ScrollView style={styles.scrollView}>\n//         {tasks.map((task, index) => (\n//           <View key={index} style={styles.taskContainer}>\n//             <TaskItem index={index + 1} task={task} deleteTask={() => deleteTask(index)} />\n//           </View>\n//         ))}\n//       </ScrollView>\n\n//       <KeyboardAvoidingView style={styles.KeyboardAVContainer}>\n//         <TextInput\n//           style={styles.inputField}\n//           value={task}\n//           onChangeText={text => setTask(text)}\n//           placeholder={'Write a task'}\n//           placeholderTextColor={'#fff'}\n//         />\n//         <TouchableOpacity onPress={handleAddTask}>\n//           <View style={styles.button}>\n//             <MaterialIcons name=\"keyboard-arrow-up\" size={24} color=\"black\" />\n//           </View>\n//         </TouchableOpacity>\n//       </KeyboardAvoidingView>\n//     </View>\n//   );\n// };\n\n// export default TaskScreen;\n\n// const styles = StyleSheet.create({\n//   TodoContainer: {\n//     flex: 1,\n//     backgroundColor: '#F37325',\n//   },\n//   heading: {\n//     color: '#fff',\n//     fontSize: 30,\n//     fontWeight: '600',\n//     marginTop: 30,\n//     marginBottom: 10,\n//     textAlign:'center'\n\n//   },\n//   scrollView: {\n//     marginBottom: 10,\n//   },\n//   taskContainer: {\n//     marginTop: 20,\n//   },\n\n//   MainContainer: {\n//     flexDirection: 'row',\n//     marginHorizontal: 20,\n//   },\n//   indexContainer: {\n//     backgroundColor: '#3E3364',\n//     borderRadius: 12,\n//     marginRight: 10,\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     width: 50,\n//     height: 50,\n//   },\n//   index: {\n//     color: '#fff',\n//     fontSize: 20,\n//   },\n//   taskContainer: {\n//     backgroundColor: '#3E3364',\n//     borderRadius: 12,\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     flex: 1,\n//     paddingHorizontal: 10,\n//     paddingVertical: 5,\n//     minHeight: 50,\n//   },\n//   task: {\n//     color: '#fff',\n//     width: '90%',\n//     fontSize: 16,\n//   },\n//   delete: {\n//     marginLeft: 10,\n//   },\n\n//   KeyboardAVContainer: {\n//     borderColor: '#fff',\n//     backgroundColor: '#3E3364',\n//     borderWidth: 1,\n//     marginHorizontal: 20,\n//     borderRadius: 12,\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     justifyContent: 'space-between',\n//     paddingHorizontal: 10,\n//     position: 'absolute',\n//     bottom: 20,\n// },\n// inputField: {\n//     color: '#fff',\n//     height: 10,\n//     flex: 1,\n// },\n// button: {\n//     height: 30,\n//     width: 30,\n//     borderRadius: 5,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n// },\n// });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}